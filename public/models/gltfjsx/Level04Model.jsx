/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 Level04.glb --transform --simplify
*/

import React, { forwardRef, useRef, useEffect, useState } from 'react'
import { useGLTF, useAnimations, Box } from '@react-three/drei'

export const Level04Model = forwardRef((props, ref) => {
  const group = useRef()
  const woodenFloorRef = useRef()
  const iceFloorRef = useRef()
  const sandFloorRef = useRef()
  const concreteFloorRef = useRef()

  const { nodes, materials, animations } = useGLTF('models/gltfjsx/Level04-transformed.glb')
  const { materialsRef, boatRef } = ref
  const { actions } = useAnimations(animations, group)

  const [selectedObject, setSelectedObject] = useState({})

  useEffect(() => {
    iceFloorRef.current.visible = false
    sandFloorRef.current.visible = false
    concreteFloorRef.current.visible = false
    woodenFloorRef.current.visible = false

    switch (selectedObject.name) {
      case "Wood":
        woodenFloorRef.current.visible = true
        break;
      case "Ice":
        iceFloorRef.current.visible = true
        break;
      case "Sand":
        sandFloorRef.current.visible = true
        break;
      case "Concrete":
        concreteFloorRef.current.visible = true
        break;
    }
  }, [selectedObject])


  useEffect(() => {
    if (actions) {
      // Set actions animation loop to false
      actions['TooClose']?.setLoop(2201)
      actions['Correct']?.setLoop(2201)
      actions['TooFar']?.setLoop(2201)
      actions['Push']?.setLoop(2201)
      actions['PushTarget']?.setLoop(2201)
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Pushing" position={[-0.252, 19.411, 1.184]} rotation={[Math.PI / 2, 0, Math.PI]} scale={0.01}>
          <primitive object={nodes.mixamorig9Hips} />
          <skinnedMesh name="Ch31_Body" geometry={nodes.Ch31_Body.geometry} material={materials.Ch31_body} skeleton={nodes.Ch31_Body.skeleton} />
          <skinnedMesh name="Ch31_Collar" geometry={nodes.Ch31_Collar.geometry} material={materials.Ch31_body} skeleton={nodes.Ch31_Collar.skeleton} />
          <skinnedMesh name="Ch31_Eyelashes" geometry={nodes.Ch31_Eyelashes.geometry} material={materials.Ch31_hair} skeleton={nodes.Ch31_Eyelashes.skeleton} />
          <skinnedMesh name="Ch31_Hair" geometry={nodes.Ch31_Hair.geometry} material={materials.Ch31_hair} skeleton={nodes.Ch31_Hair.skeleton} />
          <skinnedMesh name="Ch31_Pants" geometry={nodes.Ch31_Pants.geometry} material={materials.Ch31_body} skeleton={nodes.Ch31_Pants.skeleton} />
          <skinnedMesh name="Ch31_Shoes" geometry={nodes.Ch31_Shoes.geometry} material={materials.Ch31_body} skeleton={nodes.Ch31_Shoes.skeleton} />
          <skinnedMesh name="Ch31_Sweater" geometry={nodes.Ch31_Sweater.geometry} material={materials.Ch31_body} skeleton={nodes.Ch31_Sweater.skeleton} />
        </group>
        <mesh name="CITG_Building" geometry={nodes.CITG_Building.geometry} material={materials.Gray} scale={[4, 15, 4]} />
        <group name="EWI_Building" position={[-6.263, 0, -85.479]} scale={[1.065, 41.524, 2.236]}>
          <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={materials['Gray.001']} />
          <mesh name="Cube002_1" geometry={nodes.Cube002_1.geometry} material={materials.Red} />
          <mesh name="Cube002_2" geometry={nodes.Cube002_2.geometry} material={materials.Black} />
        </group>
        <group name="Room" scale={[4, 15, 4]}>
          <mesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials.Room} />
          <mesh name="Cube004_1" geometry={nodes.Cube004_1.geometry} material={materials.Floor} />
        </group>
        <mesh name="Walls" geometry={nodes.Walls.geometry} material={materials.Gray} scale={[4, 15, 4]} />
        <mesh name="MaterialSelector" geometry={nodes.MaterialSelector.geometry} material={materials['Balsa wood']} position={[2.244, 19.3, -0.751]}>
          <Box ref={materialsRef} args={[3, 3, 3]} position={[-1, 1.5, 0]} visible={false} />
        </mesh>
        <mesh name="RescueBoot" geometry={nodes.RescueBoot.geometry} material={materials.M_Boot} position={[0, 19.502, -2.748]} rotation={[0.003, 0, 0]}>
          <group name="PushTargetPos001" position={[-0.252, -0.079, 3.932]} />
          <group name="Passengers" position={[0, -0.019, -0.005]}>
            <mesh name="Mesh010" geometry={nodes.Mesh010.geometry} material={materials.Ch23_body} />
            <mesh name="Mesh010_1" geometry={nodes.Mesh010_1.geometry} material={materials.Ch23_hair} />
            <mesh name="Mesh010_2" geometry={nodes.Mesh010_2.geometry} material={materials.Ch12_body} />
            <mesh name="Mesh010_3" geometry={nodes.Mesh010_3.geometry} material={materials.Ch12_hair} />
            <mesh name="Mesh010_4" geometry={nodes.Mesh010_4.geometry} material={materials.Ch21_body} />
            <mesh name="Mesh010_5" geometry={nodes.Mesh010_5.geometry} material={materials.Ch21_hair} />
            <mesh name="Mesh010_6" geometry={nodes.Mesh010_6.geometry} material={materials.Ch02_body} />
            <mesh name="Mesh010_7" geometry={nodes.Mesh010_7.geometry} material={materials.Ch02_hair} />
          </group>
        </mesh>
        <mesh name="WaterSlide_Big_Half" geometry={nodes.WaterSlide_Big_Half.geometry} material={materials['Aluminium sand']} position={[0.366, 19, -4]} rotation={[0, 0, -Math.PI / 2]} />
        <mesh name="transparent-clock" geometry={nodes['transparent-clock'].geometry} material={materials['transparent-clock']} position={[-5.089, 69.943, -85.715]} rotation={[1.571, 0, -1.571]} scale={4.019} />
        <mesh ref={concreteFloorRef} name="ConcreteFloor" geometry={nodes.ConcreteFloor.geometry} material={materials.Concrate} scale={[4, 15, 4]} />
        <mesh ref={iceFloorRef} name="IceFloor" geometry={nodes.IceFloor.geometry} material={materials['Ice.002']} scale={[4, 15, 4]} />
        <mesh ref={sandFloorRef} name="SandFloor" geometry={nodes.SandFloor.geometry} material={materials['Sand.001']} scale={[4, 15, 4]} />
        <mesh ref={woodenFloorRef} name="WoodenFloor" geometry={nodes.WoodenFloor.geometry} material={materials['Wooden surface']} scale={[4, 15, 4]} />
        <mesh name="MaterialSelectorFrame" geometry={nodes.MaterialSelectorFrame.geometry} material={materials['Plastic Wood']} position={[2.244, 19.3, -0.751]} scale={[0.2, 0.2, 0.19]} />
        <mesh name="Concrete" geometry={nodes.SelectableConcrete.geometry} material={materials.Concrate} position={[2.272, 20.016, -0.439]} scale={[1, 1, 0.95]} onClick={(obj) => {
          obj.stopPropagation()
          setSelectedObject(obj.eventObject)
        }} />
        <mesh name="Ice" geometry={nodes.SelectableIce.geometry} material={materials['Ice.002']} position={[2.272, 20.016, -0.837]} scale={[1, 1, 0.95]}
          onClick={(obj) => {
            obj.stopPropagation()
            setSelectedObject(obj.eventObject)
          }} />
        <mesh name="Sand" geometry={nodes.SelectableSand.geometry} material={materials['Sand.001']} position={[2.272, 20.016, -1.257]} scale={[1, 1, 0.95]}
          onClick={(obj) => {
            obj.stopPropagation()
            setSelectedObject(obj.eventObject)
          }} />
        <mesh name="Wood" geometry={nodes.SelectableWood.geometry} material={materials['Wooden surface']} position={[2.272, 20.016, -1.436]} scale={[1, 1, 0.95]}
          onClick={(obj) => {
            obj.stopPropagation()
            setSelectedObject(obj.eventObject)
          }} />
      </group>
    </group>
  )
})

useGLTF.preload('models/gltfjsx/Level04-transformed.glb')